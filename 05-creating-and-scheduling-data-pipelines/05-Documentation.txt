1.กำหนดค่าพื้นฐานสำหรับ DAG: ในบรรทัดแรกของโค้ด Airflow มีการกำหนดค่าพื้นฐาน (default_args) ซึ่งระบุข้อมูลเช่นเจ้าของของ DAG, ว่าต้องการให้ Retry เมื่อ Task ล้มเหลวหรือไม่, วันเริ่มต้นของ DAG, และอื่น ๆ ที่จำเป็นสำหรับการระบุการทำงานของ DAG.

2.Task "get_files": สร้าง Task เพื่อดึงรายชื่อไฟล์ JSON จากตำแหน่งที่กำหนดโดยใช้ PythonOperator ซึ่งจะเรียกใช้ฟังก์ชัน get_files() เพื่อค้นหาไฟล์ JSON และส่งผลลัพธ์ดังกล่าวไปยัง Task ถัดไปผ่าน XCom.

3.Task "create_tables": สร้าง Task เพื่อสร้างตารางในฐานข้อมูล PostgreSQL โดยใช้ PythonOperator ซึ่งจะเรียกใช้ฟังก์ชัน create_tables() เพื่อสร้างตารางที่เราต้องการในฐานข้อมูล PostgreSQL โดยใช้ PostgresHook.

4.Task "process": สร้าง Task เพื่อประมวลผลข้อมูลจากไฟล์ JSON และนำเข้าข้อมูลลงในตารางในฐานข้อมูล PostgreSQL โดยใช้ PythonOperator ซึ่งจะเรียกใช้ฟังก์ชัน process() เพื่ออ่านข้อมูลจากไฟล์ JSON และทำการประมวลผลข้อมูลก่อนนำเข้าลงในฐานข้อมูล PostgreSQL โดยใช้ PostgresHook.

5.กำหนดตัวเรียงการทำงานของ Task: ในส่วนสุดท้ายของโค้ด Airflow, เรากำหนดการทำงานของ Task ให้เกิดขึ้นตามลำดับดังนี้: Task "get_files" จะต้องเรียกก่อน Task "create_tables" และ Task "create_tables" จะต้องเรียกก่อน Task "process". ดังนั้นเราใช้ >> operator เพื่อกำหนดลำดับการทำงานของ Task ใน DAG นี้.